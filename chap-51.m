#*************************************************************************************************************************
#
#Copyright or Â© or Copr.[DGFIP][2017]
#
#Ce logiciel a Ã©tÃ© initialement dÃ©veloppÃ© par la Direction GÃ©nÃ©rale des 
#Finances Publiques pour permettre le calcul de l'impÃ´t sur le revenu 2016 
#au titre des revenus perÃ§us en 2015. La prÃ©sente version a permis la 
#gÃ©nÃ©ration du moteur de calcul des chaÃ®nes de taxation des rÃ´les d'impÃ´t 
#sur le revenu de ce millÃ©sime.
#
#Ce logiciel est rÃ©gi par la licence CeCILL 2.1 soumise au droit franÃ§ais 
#et respectant les principes de diffusion des logiciels libres. Vous pouvez 
#utiliser, modifier et/ou redistribuer ce programme sous les conditions de 
#la licence CeCILL 2.1 telle que diffusÃ©e par le CEA, le CNRS et l'INRIA  sur 
#le site "http://www.cecill.info".
#
#Le fait que vous puissiez accÃ©der Ã  cet en-tÃªte signifie que vous avez pris 
#connaissance de la licence CeCILL 2.1 et que vous en avez acceptÃ© les termes.
#
#**************************************************************************************************************************
  ####   #    #    ##    #####         #####      #
 #    #  #    #   #  #   #    #        #          #
 #       ######  #    #  #    #        #          #
 #       #    #  ######  #####         #####      #
 #    #  #    #  #    #  #                 #      #
  ####   #    #  #    #  #     #####   #####      #
 #
 #
 #
 #
 #
 #
 #           CALCUL DES DROITS SIMPLES RESULTANT DU TAUX PROGRESSIF
 #
 #
 #
 #
 #
 #
regle 511000:
application : bareme , iliad , batch ;


IMT11 = max(ID11-ADO1 , IMI)*(1-INDTXMOY)
         + IMO * INDTXMOY ;
IMT12 = max(ID11 , IMI)*(1-INDTXMOY)
         + IMO * INDTXMOY ;
IMTANT11 = max(IDANT11-ADO1 , IMI)*(1-INDTXMOY)
         + IMO * INDTXMOY ;
IMTANT12 = max(IDANT11 , IMI)*(1-INDTXMOY)
         + IMO * INDTXMOY ;
IPHQ = arr(IMT11 * (IMPFHQ1 / ID11)) ;
IPHQ2 = arr(IMT12 * (IMPFHQ1 / ID11)) ;

IPHQANT2 = arr(IMTANT12 * (IMPFHQANT1 / IDANT11)) ;

IPQT = IMT11 - IPHQ ;
IPQT2 = IMT12 - IPHQ2 ;

regle 511010:
application : bareme , iliad , batch ;


pour z = 1,2:
ID1z =  arr( IPQz * arr(RIz+REVQUOQHT) / arr(RB0z+TONEQUO) );
IDANT11 =  arr( IPQANT1 * arr(RI1+REVQUOQHT) / arr(RB01+TONEQUO) );
ID14 = IN04;
ID16 = IN06;

IMPFHQ1 = (1-positif(VARIPTEFN)) * EXO1 * arr(ID11 * IPQ01 / IPQ1);
IMPFHQANT1 = (1-positif(VARIPTEFN )) * EXO1 
             * arr(IDANT11 * IPQANT01 / IPQANT1) ;

regle 511020:
application : bareme , iliad , batch ;


pour z=1,2:
IPQz = IPQ0z*EXO1 + IPQ100z ;

IPQANT1 = IPQANT01*EXO1 + IPQANT1001 ;

IPQ5 = IPQ05 + IPQ1005 ;

regle 511030:
application : iliad , batch ;


pour z = 1,2:
IDOM3z = (positif(IND_TDR) * IDOM14)
         +
     ((1-positif(IND_TDR)) * ((V_CNR * IDOM1z) + ((1-V_CNR) * ((ID1z - ADO3z)* (1-positif(INDCODDAJ)) + ITOTDOM3z * positif(INDCODDAJ)))));

regle 511040:
application : iliad , batch ;

SEUILEXO = SEUIL_EXO1 + (SEUIL_EXO2 - SEUIL_EXO1)
           * positif_ou_nul( max(AGV,AGC) - LIM_AGE_EXO );

EXO1 =    ( (1-min(abs(VARIPTEFN) + VARIPTEFP +INDTEFF , 1)) *
                                  positif(R1649+PREREV + RG + TOTALQUO -SEUILEXO)
            +
            (min(abs(VARIPTEFN ) + VARIPTEFP +INDTEFF, 1))) ;

regle 511050:
application : bareme ;

EXO1 = present(V_9ZZ) ;

regle 511060:
application : iliad , batch ;


IMI = arr (BMI * TX_MIN_MET / 100 
              + arr(PRODOM + PROGUY) * TX_MIN_DOM / 100) 
          * V_CNR ;

IMO = arr (BMI * TMOY / 100
              + arr(PRODOM + PROGUY) * TX_MIN_DOM / 100) 
          * V_CNR ;

RASAR = arr (BRAS * TX_RASAR / 100) ;

regle 511070:
application : bareme , iliad , batch ;


BMI = arr( RI1 + REVQUO - PRODOM - PROGUY ) ;

regle 511080:
application : iliad , batch ;


TMOY = inf(IPQ5/(max(0,RB05 + TONEQUOM)) * 10000) / 100 * V_CNR ;

regle 511090:
application : bareme , iliad , batch ;


pour z=1,2,5,7:
IQUOTOTz = IN5z - IN0z;
IQUOTOTANT1 = INANT51 - INANT01;

regle 511100:
application : bareme , iliad , batch ;

pour z=1,2:
ZIPQRWBz = positif(TEGLRWA+TEGLRVG+somme(i=1..4:TEGLi)+TEGLFTOT+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) 
          * arr(IQUOTOTz * TERPQRWB / TETONEQUO1)
         + (1 - positif(TEGLRWA+TEGLRVG+somme(i=1..4:TEGLi)+TEGLFTOT+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) * IQUOTOTz ;
ZIPQANTRWB = positif(TEGLRWA+TEGLRVG+somme(i=1..4:TEGLi)+TEGLFTOT+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) 
          * arr(IQUOTOTANT1 * TERPQRWB / TETONEQUO1)
         + (1 - positif(TEGLRWA+TEGLRVG+somme(i=1..4:TEGLi)+TEGLFTOT+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) * IQUOTOTANT1 ;
ZIPQRWB5 = positif(TEGLRWA+TEGLRVG+somme(i=1..4:TEGLiM)+TEGLFTOTM+TEGLPALIMTOTM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM) 
          * arr(IQUOTOT5 * TERPQRWBM / TETONEQUOM1)
         + (1 - positif(TEGLRWA+TEGLRVG+somme(i=1..4:TEGLiM)+TEGLFTOTM+TEGLPALIMTOTM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM)) * IQUOTOT7 ;
pour z=1,2:
ZIPQRWAz = positif(TEGLRVG+somme(i=1..4:TEGLi)+TEGLFTOT+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) 
          * arr(IQUOTOTz * TERPQRWA / TETONEQUO1)
         + (1 - positif(TEGLRVG+somme(i=1..4:TEGLi)+TEGLFTOT+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) * (IQUOTOTz-ZIPQRWBz) ;
ZIPQANTRWA = positif(TEGLRVG+somme(i=1..4:TEGLi)+TEGLFTOT+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) 
          * arr(IQUOTOTANT1 * TERPQRWA / TETONEQUO1)
         + (1 - positif(TEGLRVG+somme(i=1..4:TEGLi)+TEGLFTOT+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) * (IQUOTOTANT1 -ZIPQANTRWB);
ZIPQRWA5 = positif(TEGLRVG+somme(i=1..4:TEGLiM)+TEGLFTOTM+TEGLPALIMTOTM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM) 
          * arr(IQUOTOT5 * TERPQRWAM / TETONEQUOM1)
         + (1 - positif(TEGLRVG+somme(i=1..4:TEGLiM)+TEGLFTOTM+TEGLPALIMTOTM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM)) * (IQUOTOT7 -ZIPQRWB5);
pour z=1,2:
ZIPQRVGz = positif(somme(i=1..4:TEGLi)+TEGLFTOT+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) 
          * arr(IQUOTOTz * TERPQRVG / TETONEQUO1)
         + (1 - positif(somme(i=1..4:TEGLi)+TEGLFTOT+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) * (IQUOTOTz-ZIPQRWBz-ZIPQRWAz) ;
ZIPQANTRVG = positif(somme(i=1..4:TEGLi)+TEGLFTOT+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) 
          * arr(IQUOTOTANT1 * TERPQRVG / TETONEQUO1)
         + (1 - positif(somme(i=1..4:TEGLi)+TEGLFTOT+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) * (IQUOTOTANT1 -ZIPQANTRWB-ZIPQANTRWA);
ZIPQRVG5 = positif(somme(i=1..4:TEGLiM)+TEGLFTOTM+TEGLPALIMTOTM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM) 
          * arr(IQUOTOT5 * TERPQRVGM / TETONEQUOM1)
         + (1 - positif(somme(i=1..4:TEGLiM)+TEGLFTOTM+TEGLPALIMTOTM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM)) * (IQUOTOT7-ZIPQRWB5-ZIPQRWA5) ;
pour z=1,2:
ZIPQ1z = positif(somme(i=2..4:TEGLi)+TEGLFTOT+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) 
          * arr(IQUOTOTz * TERPQ1 / TETONEQUO1)
         + (1 - positif(somme(i=2..4:TEGLi)+TEGLFTOT+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) * (IQUOTOTz -ZIPQRWBz-ZIPQRWAz- ZIPQRVGz) ;
ZIPQANT11 = positif(somme(i=2..4:TEGLi)+TEGLFTOT+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) 
          * arr(IQUOTOTANT1 * TERPQ1 / TETONEQUO1)
         + (1 - positif(somme(i=2..4:TEGLi)+TEGLFTOT+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) * (IQUOTOTANT1-ZIPQANTRWB-ZIPQANTRWA-ZIPQANTRVG) ;
ZIPQ15 = positif(somme(i=2..4:TEGLiM)+TEGLFTOTM+TEGLPALIMTOTM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM) 
          * arr(IQUOTOT5 * TERPQ1M / TETONEQUOM1)
         + (1 - positif(somme(i=2..4:TEGLiM)+TEGLFTOTM+TEGLPALIMTOTM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM)) * (IQUOTOT7 -ZIPQRWB5-ZIPQRWA5-ZIPQRVG5);
pour z=1,2:
ZIPQ2z = positif(somme(i=3,4:TEGLi)+TEGLFTOT+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) 
          * arr(IQUOTOTz * TERPQ2 / TETONEQUO1)
         + (1 - positif(somme(i=3,4:TEGLi)+TEGLFTOT+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) * (IQUOTOTz-ZIPQRWBz-ZIPQRWAz- ZIPQRVGz-ZIPQ1z) ;
ZIPQANT21 = positif(somme(i=3,4:TEGLi)+TEGLFTOT+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) 
          * arr(IQUOTOTANT1 * TERPQ2 / TETONEQUO1)
         + (1 - positif(somme(i=3,4:TEGLi)+TEGLFTOT+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) * (IQUOTOTANT1 -ZIPQANTRWB-ZIPQANTRWA-ZIPQANTRVG-ZIPQANT11);
ZIPQ25 = positif(somme(i=3,4:TEGLiM)+TEGLFTOTM+TEGLPALIMTOTM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM) 
          * arr(IQUOTOT5 * TERPQ2M / TETONEQUOM1)
         + (1 - positif(somme(i=3,4:TEGLiM)+TEGLFTOTM+TEGLPALIMTOTM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM)) * (IQUOTOT7 -ZIPQRWB5-ZIPQRWA5-ZIPQRVG5-ZIPQ15);
pour z=1,2:
ZIPQ3z = positif(TEGL4+TEGLFTOT+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) 
          * arr(IQUOTOTz * TERPQ3 / TETONEQUO1)
         + (1 - positif(TEGL4+TEGLFTOT+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) * (IQUOTOTz -ZIPQRWBz-ZIPQRWAz- ZIPQRVGz-somme(x=1,2:ZIPQxz));
ZIPQANT31 = positif(TEGL4+TEGLFTOT+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) 
          * arr(IQUOTOTANT1 * TERPQ3 / TETONEQUO1)
         + (1 - positif(TEGL4+TEGLFTOT+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) * (IQUOTOTANT1 -ZIPQANTRWB-ZIPQANTRWA-ZIPQANTRVG-somme(x=1,2:ZIPQANTx1));
ZIPQ35 = positif(TEGL4M+TEGLFTOTM+TEGLPALIMTOTM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM) 
          * arr(IQUOTOT5 * TERPQ3M / TETONEQUOM1)
         + (1 - positif(TEGL4M+TEGLFTOTM+TEGLPALIMTOTM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM)) * (IQUOTOT7 -ZIPQRWB5-ZIPQRWA5-ZIPQRVG5-somme(x=1,2:ZIPQx5));
pour z=1,2:
ZIPQ4z = positif(TEGLFTOT+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) 
          * arr(IQUOTOTz * TERPQ4 / TETONEQUO1)
         + (1 - positif(TEGLFTOT+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) * (IQUOTOTz -ZIPQRWBz-ZIPQRWAz- ZIPQRVGz-somme(x=1..3:ZIPQxz));
ZIPQANT41 = positif(TEGLFTOT+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) 
          * arr(IQUOTOTANT1 * TERPQ4 / TETONEQUO1)
         + (1 - positif(TEGLFTOT+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) * (IQUOTOTANT1 -ZIPQANTRWB-ZIPQANTRWA-ZIPQANTRVG-somme(x=1..3:ZIPQANTx1));
ZIPQ45 = positif(TEGLFTOTM+TEGLPALIMTOTM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM) 
          * arr(IQUOTOT5 * TERPQ4M / TETONEQUOM1)
         + (1 - positif(TEGLFTOTM+TEGLPALIMTOTM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM)) * (IQUOTOT7 -ZIPQRWB5-ZIPQRWA5-ZIPQRVG5-somme(x=1..3:ZIPQx5));

regle 511110:
application : bareme , iliad , batch ;

ZIPQ1TOT= somme(i=1..4 : ZIPQi1) + ZIPQRVG1 + ZIPQRWB1 + ZIPQRWA1 ;
ZIPQ2TOT= somme(i=1..4 : ZIPQi2) + ZIPQRVG2 + ZIPQRWB2 + ZIPQRWA2 ;
ZIPQ5TOT= somme(i=1..4 : ZIPQi5) + ZIPQRVG5 + ZIPQRWB5 + ZIPQRWA5 ;
ZIPQANT1TOT= somme(i=1..4 : ZIPQANTi1) + ZIPQANTRVG + ZIPQANTRWB + ZIPQANTRWA ;

regle 511120:
application : bareme , iliad , batch ;


pour z=1,2:
ZIPQFVz = positif(somme(i=C,1..4:TEGLFi)+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) 
		* arr(IQUOTOTz*TERPQFV/TETONEQUO1)
         + (1 - positif(somme(i=C,1..4:TEGLFi)+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT))
		* (IQUOTOTz-ZIPQzTOT);
ZIPQFANTV1 = positif(somme(i=C,1..4 : TEGLFi) +TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) 
		* arr(IQUOTOTANT1*TERPQFV/TETONEQUO1)
         + (1 - positif(somme(i=C,1..4 : TEGLFi) +TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) 
		* (IQUOTOTANT1-ZIPQANT1TOT) ;
ZIPQFV5 = positif(somme(i=C,1..4 : TEGLFiM) +TEGLPALIMTOTM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM) 
		* arr(IQUOTOT5*TERPQFVM/TETONEQUOM1)
         + (1 - positif(somme(i=C,1..4 : TEGLFiM) +TEGLPALIMTOTM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM)) 
		* (IQUOTOT5-ZIPQ5TOT);
pour z=1,2:
ZIPQFCz = positif(somme(i=1..4:TEGLFi)+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) 
		* arr(IQUOTOTz*TERPQFC/TETONEQUO1)
         + (1 - positif(somme(i=1..4:TEGLFi)+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT))
		* (IQUOTOTz-ZIPQzTOT-ZIPQFVz);
ZIPQFANTC1 = positif(somme(i=1..4 : TEGLFi) +TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) 
		* arr(IQUOTOTANT1*TERPQFC/TETONEQUO1)
         + (1 - positif(somme(i=1..4 : TEGLFi) +TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) 
		* (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANTV1) ;
ZIPQFC5 = positif(somme(i=1..4 : TEGLFiM) +TEGLPALIMTOTM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM) 
		* arr(IQUOTOT5*TERPQFCM/TETONEQUOM1)
         + (1 - positif(somme(i=C,1..4 : TEGLFiM) +TEGLPALIMTOTM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM)) 
		* (IQUOTOT5-ZIPQ5TOT-ZIPQFV5);
pour z=1,2:
ZIPQF1z = positif(somme(i=2,3,4:TEGLFi)+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) 
		* arr(IQUOTOTz*TERPQF1/TETONEQUO1)
         + (1 - positif(somme(i=2..4:TEGLFiM)+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT))
		* (IQUOTOTz-ZIPQzTOT-somme(x=V,C:ZIPQFxz));
ZIPQFANT11 = positif(somme(i=2..4 : TEGLFi) +TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) 
		* arr(IQUOTOTANT1*TERPQF1/TETONEQUO1)
         + (1 - positif(somme(i=2..4 : TEGLFi) +TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) 
		* (IQUOTOTANT1-ZIPQANT1TOT-somme(x=V,C:ZIPQFANTx1)) ;
ZIPQF15 = positif(somme(i=2,3,4 : TEGLFiM) +TEGLPALIMTOTM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM) 
		* arr(IQUOTOT5*TERPQF1M/TETONEQUOM1)
         + (1 - positif(somme(i=2..4 : TEGLFiM) +TEGLPALIMTOTM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM)) 
		* (IQUOTOT5-ZIPQ5TOT-somme(x=V,C:ZIPQFx5));
pour z=1,2:
ZIPQF2z = positif(somme(i=3,4:TEGLFi)+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) 
		* arr(IQUOTOTz*TERPQF2/TETONEQUO1)
         + (1 - positif(somme(i=3,4:TEGLFi)+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT))
		* (IQUOTOTz-ZIPQzTOT-somme(x=V,C,1:ZIPQFxz));
ZIPQFANT21 = positif(somme(i=3,4 : TEGLFi) +TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) 
		* arr(IQUOTOTANT1*TERPQF2/TETONEQUO1)
         + (1 - positif(somme(i=3,4 : TEGLFi) +TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) 
		* (IQUOTOTANT1-ZIPQANT1TOT-somme(x=V,C,1:ZIPQFANTx1)) ;
ZIPQF25 = positif(somme(i=3,4 : TEGLFiM) +TEGLPALIMTOTM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM) 
		* arr(IQUOTOT5*TERPQF2M/TETONEQUOM1)
         + (1 - positif(somme(i=3,4 : TEGLFiM) +TEGLPALIMTOTM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM)) 
		* (IQUOTOT5-ZIPQ5TOT-somme(x=V,C,1:ZIPQFx5));
pour z=1,2:
ZIPQF3z = positif(TEGLF4+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) 
		* arr(IQUOTOTz*TERPQF3/TETONEQUO1)
         + (1 - positif(TEGLF4+TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT))
		* (IQUOTOTz-ZIPQzTOT-somme(x=V,C,1,2:ZIPQFxz));
ZIPQFANT31 = positif(TEGLF4 +TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) 
		* arr(IQUOTOTANT1*TERPQF3/TETONEQUO1)
         + (1 - positif(TEGLF4 +TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) 
		* (IQUOTOTANT1-ZIPQANT1TOT-somme(x=V,C,1,2:ZIPQFANTx1)) ;
ZIPQF35 = positif(TEGLF4M +TEGLPALIMTOTM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM) 
		* arr(IQUOTOT5*TERPQF3M/TETONEQUOM1)
         + (1 - positif(TEGLF4M +TEGLPALIMTOTM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM)) 
		* (IQUOTOT5-ZIPQ5TOT-somme(x=V,C,1,2:ZIPQFx5));
pour z=1,2:
ZIPQF4z = positif(TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) 
		* arr(IQUOTOTz*TERPQF4/TETONEQUO1)
         + (1 - positif(TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT))
		* (IQUOTOTz-ZIPQzTOT-somme(x=V,C,1..3:ZIPQFxz));
ZIPQFANT41 = positif(TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) 
		* arr(IQUOTOTANT1*TERPQF4/TETONEQUO1)
         + (1 - positif(TEGLPALIMTOT+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) 
		* (IQUOTOTANT1-ZIPQANT1TOT-somme(x=V,C,1..3:ZIPQFANTx1)) ;
ZIPQF45 = positif(TEGLPALIMTOTM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM) 
		* arr(IQUOTOT5*TERPQF4M/TETONEQUOM1)
         + (1 - positif(TEGLPALIMTOTM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM)) 
		* (IQUOTOT5-ZIPQ5TOT-somme(x=V,C,1..3:ZIPQFx5));

ZIPQF1TOT= somme(i=V,C,1..4 : ZIPQFi1) ;
ZIPQF2TOT= somme(i=V,C,1..4 : ZIPQFi2) ;
ZIPQF5TOT= somme(i=V,C,1..4 : ZIPQFi5) ;
ZIPQFANT1TOT= somme(i=V,C,1..4 : ZIPQFANTi1) ;

regle 511130:
application : bareme , iliad , batch ;


pour z=1,2:
ZIPQPALIMVz = positif(somme(i=C,1..4:TEGLPALIMi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) * arr(IQUOTOTz*TERPQPALIMV/TETONEQUO1)
         + (1 - positif(somme(i=C,1..4:TEGLPALIMi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT);
ZIPQPALIMANTV1 = positif(somme(i=C,1..4:TEGLPALIMi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT ) * arr(IQUOTOTANT1*TERPQPALIMV/TETONEQUO1)
         + (1 - positif(somme(i=C,1..4:TEGLPALIMi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT
        );
ZIPQPALIMV5 = positif(somme(i=C,1..4:TEGLPALIMiM)+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM) *arr(IQUOTOT5*TERPQPALIMVM/TETONEQUOM1)
         + (1 - positif(somme(i=C,1..4:TEGLPALIMiM)+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT );
pour z=1,2:
ZIPQPALIMCz = positif(somme(i=1..4:TEGLPALIMi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) * arr(IQUOTOTz*TERPQPALIMC/TETONEQUO1)
         + (1 - positif(somme(i=1..4:TEGLPALIMi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMVz);
ZIPQPALIMANTC1 = positif(somme(i=1..4:TEGLPALIMi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT ) * arr(IQUOTOTANT1*TERPQPALIMC/TETONEQUO1)
         + (1 - positif(somme(i=1..4:TEGLPALIMi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANTV1
        );
ZIPQPALIMC5 = positif(somme(i=1..4:TEGLPALIMiM)+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM) *arr(IQUOTOT5*TERPQPALIMCM/TETONEQUOM1)
         + (1 - positif(somme(i=1..4:TEGLPALIMiM)+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIMV5 );
pour z=1,2:
ZIPQPALIM1z = positif(somme(i=2..4:TEGLPALIMi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) * arr(IQUOTOTz*TERPQPALIM1/TETONEQUO1)
         + (1 - positif(somme(i=2..4:TEGLPALIMi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-somme(i=V,C:ZIPQPALIMiz));
ZIPQPALIMANT11 = positif(somme(i=2..4:TEGLPALIMi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT ) * arr(IQUOTOTANT1*TERPQPALIM1/TETONEQUO1)
         + (1 - positif(somme(i=2..4:TEGLPALIMi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-somme(i=V,C:ZIPQPALIMANTi1)
        );
ZIPQPALIM15 = positif(somme(i=2..4:TEGLPALIMiM)+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM) *arr(IQUOTOT5*TERPQPALIM1M/TETONEQUOM1)
         + (1 - positif(somme(i=2..4:TEGLPALIMiM)+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-somme(i=V,C:ZIPQPALIMi5));
pour z=1,2:
ZIPQPALIM2z = positif(somme(i=3,4:TEGLPALIMi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) * arr(IQUOTOTz*TERPQPALIM2/TETONEQUO1)
         + (1 - positif(somme(i=3,4:TEGLPALIMi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-somme(i=V,C,1:ZIPQPALIMiz));
ZIPQPALIMANT21 = positif(somme(i=3,4:TEGLPALIMi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT ) * arr(IQUOTOTANT1*TERPQPALIM2/TETONEQUO1)
         + (1 - positif(somme(i=3,4:TEGLPALIMi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-somme(i=V,C,1:ZIPQPALIMANTi1)
        );
ZIPQPALIM25 = positif(somme(i=3,4:TEGLPALIMiM)+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM) *arr(IQUOTOT5*TERPQPALIM2M/TETONEQUOM1)
         + (1 - positif(somme(i=3,4:TEGLPALIMiM)+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-somme(i=V,C,1:ZIPQPALIMi5));
pour z=1,2:
ZIPQPALIM3z = positif(TEGLPALIM4+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) * arr(IQUOTOTz*TERPQPALIM3/TETONEQUO1)
         + (1 - positif(TEGLPALIM4+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-somme(i=V,C,1..2:ZIPQPALIMiz));
ZIPQPALIMANT31 = positif(TEGLPALIM4+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT ) * arr(IQUOTOTANT1*TERPQPALIM3/TETONEQUO1)
         + (1 - positif(TEGLPALIM4+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-somme(i=V,C,1..2:ZIPQPALIMANTi1)
        );
ZIPQPALIM35 = positif(TEGLPALIM4M+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM) *arr(IQUOTOT5*TERPQPALIM3M/TETONEQUOM1)
         + (1 - positif(TEGLPALIM4M+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-somme(i=V,C,1..2:ZIPQPALIMi5));
pour z=1,2:
ZIPQPALIM4z = positif(TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT) * arr(IQUOTOTz*TERPQPALIM4/TETONEQUO1)
         + (1 - positif(TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-somme(i=V,C,1..3:ZIPQPALIMiz));
ZIPQPALIMANT41 = positif(TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT ) * arr(IQUOTOTANT1*TERPQPALIM4/TETONEQUO1)
         + (1 - positif(TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRCMTOT+TEGLRFTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-somme(i=V,C,1..3:ZIPQPALIMANTi1)
        );
ZIPQPALIM45 = positif(TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM) *arr(IQUOTOT5*TERPQPALIM4M/TETONEQUOM1)
         + (1 - positif(TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-somme(i=V,C,1..3:ZIPQPALIMi5));

ZIPQPALIM1TOT= somme(i=V,C,1..4 : ZIPQPALIMi1) ;
ZIPQPALIM2TOT= somme(i=V,C,1..4 : ZIPQPALIMi2) ;
ZIPQPALIM5TOT= somme(i=V,C,1..4 : ZIPQPALIMi5) ;
ZIPQPALIMANT1TOT= somme(i=V,C,1..4 : ZIPQPALIMANTi1) ;

regle 511140:
application : bareme , iliad , batch ;


pour z=1,2:
ZIPQRCMDCz = positif(TEGLRCMFU+TEGLRCMCH+TEGLRCMTS+TEGLRCMGO+TEGLRCMTR+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTz*TERPQRCMDC/TETONEQUO1)
         + (1 - positif(TEGLRCMFU+TEGLRCMCH+TEGLRCMTS+TEGLRCMGO+TEGLRCMTR+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT);
ZIPQRCMDCANT1 = positif(TEGLRCMFU+TEGLRCMCH+TEGLRCMTS+TEGLRCMGO+TEGLRCMTR+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTANT1*TERPQRCMDC/TETONEQUO1)
         + (1 - positif(TEGLRCMFU+TEGLRCMCH+TEGLRCMTS+TEGLRCMGO+TEGLRCMTR+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT
        );
ZIPQRCMDC5 = positif(TEGLRCMFUM+TEGLRCMCHM+TEGLRCMTSM+TEGLRCMGOM+TEGLRCMTRM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRFTOTM) *arr(IQUOTOT5*TERPQRCMDCM/TETONEQUOM1)
         + (1 - positif(TEGLRCMFUM+TEGLRCMCHM+TEGLRCMTSM+TEGLRCMGOM+TEGLRCMTRM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRCMTOTM+TEGLRFTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT);

regle 511150:
application : bareme , iliad , batch ;


pour z=1,2:
ZIPQRCMFUz = positif(TEGLRCMCH+TEGLRCMTS+TEGLRCMGO+TEGLRCMTR+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTz*TERPQRCMFU/TETONEQUO1)
         + (1 - positif(TEGLRCMCH+TEGLRCMTS+TEGLRCMGO+TEGLRCMTR+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMDCz);
ZIPQRCMFUANT1 = positif(TEGLRCMCH+TEGLRCMTS+TEGLRCMGO+TEGLRCMTR+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTANT1*TERPQRCMFU/TETONEQUO1)
         + (1 - positif(TEGLRCMCH+TEGLRCMTS+TEGLRCMGO+TEGLRCMTR+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMDCANT1
        );
ZIPQRCMFU5 = positif(TEGLRCMCHM+TEGLRCMTSM+TEGLRCMGOM+TEGLRCMTRM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRFTOTM) *arr(IQUOTOT5*TERPQRCMFUM/TETONEQUOM1)
         + (1 - positif(TEGLRCMCHM+TEGLRCMTSM+TEGLRCMGOM+TEGLRCMTRM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRFTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCMDC5);

regle 511160:
application : bareme , iliad , batch ;


pour z=1,2:
ZIPQRCMCHz =    positif(TEGLRCMTS+TEGLRCMGO+TEGLRCMTR+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTz*TERPQRCMCH/TETONEQUO1)
         + (1 - positif(TEGLRCMTS+TEGLRCMGO+TEGLRCMTR+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMDCz-ZIPQRCMFUz);
ZIPQRCMCHANT1 = positif(TEGLRCMTS+TEGLRCMGO+TEGLRCMTR+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTANT1*TERPQRCMCH/TETONEQUO1)
         + (1 - positif(TEGLRCMTS+TEGLRCMGO+TEGLRCMTR+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMDCANT1-ZIPQRCMFUANT1
        );
ZIPQRCMCH5 =    positif(TEGLRCMTSM+TEGLRCMGOM+TEGLRCMTRM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRFTOTM) *arr(IQUOTOT5*TERPQRCMCHM/TETONEQUOM1)
         + (1 - positif(TEGLRCMTSM+TEGLRCMGOM+TEGLRCMTRM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRFTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCMDC5-ZIPQRCMFU5);

regle 511170:
application : bareme , iliad , batch ;


pour z=1,2:
ZIPQRCMTRz = positif(TEGLRCMGO+TEGLRCMTS+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTz*TERPQRCMTR/TETONEQUO1)
         + (1 - positif(TEGLRCMGO+TEGLRCMTS+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMDCz-ZIPQRCMFUz-ZIPQRCMCHz);
ZIPQRCMTRANT1 = positif(TEGLRCMGO+TEGLRCMTS+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTANT1*TERPQRCMTR/TETONEQUO1)
         + (1 - positif(TEGLRCMGO+TEGLRCMTS+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMDCANT1-ZIPQRCMFUANT1-ZIPQRCMCHANT1
        );
ZIPQRCMTR5 = positif(TEGLRCMGOM+TEGLRCMTSM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRFTOTM) *arr(IQUOTOT5*TERPQRCMTRM/TETONEQUOM1)
         + (1 - positif(TEGLRCMGOM+TEGLRCMTSM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRFTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCMDC5-ZIPQRCMFU5-ZIPQRCMCH5);

regle 511180:
application : bareme , iliad , batch ;


pour z=1,2:
ZIPQRCMGOz = positif(TEGLRCMTS+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTz*TERPQRCMGO/TETONEQUO1)
         + (1 - positif(TEGLRCMTS+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMDCz-ZIPQRCMFUz-ZIPQRCMCHz-ZIPQRCMTRz);
ZIPQRCMGOANT1 = positif(TEGLRCMTS+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTANT1*TERPQRCMGO/TETONEQUO1)
         + (1 - positif(TEGLRCMTS+TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMDCANT1-ZIPQRCMFUANT1-ZIPQRCMCHANT1-ZIPQRCMTRANT1
        );
ZIPQRCMGO5 = positif(TEGLRCMTSM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRFTOTM) *arr(IQUOTOT5*TERPQRCMGOM/TETONEQUOM1)
         + (1 - positif(TEGLRCMTSM+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRFTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCMDC5-ZIPQRCMFU5-ZIPQRCMCH5-ZIPQRCMTR5);

regle 511190:
application : bareme , iliad , batch ;


pour z=1,2:
ZIPQRCMTSz = positif(TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTz*TERPQRCMTS/TETONEQUO1)
         + (1 - positif(TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMDCz-ZIPQRCMFUz-ZIPQRCMCHz-ZIPQRCMTRz-ZIPQRCMGOz);
ZIPQRCMTSANT1 = positif(TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTANT1*TERPQRCMTS/TETONEQUO1)
         + (1 - positif(TEGLTSTOT+TEGLTSREMPTOT+TEGLPRRTOT+TEGLPRRZTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMDCANT1-ZIPQRCMFUANT1-ZIPQRCMCHANT1-ZIPQRCMTRANT1-ZIPQRCMGOANT1
        );
ZIPQRCMTS5 = positif(TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRFTOTM) *arr(IQUOTOT5*TERPQRCMTSM/TETONEQUOM1)
         + (1 - positif(TEGLTSTOTM+TEGLTSREMPTOTM+TEGLPRRTOTM+TEGLPRRZTOTM+TEGLRVOTOTM+TEGLRFTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCMDC5-ZIPQRCMFU5-ZIPQRCMCH5-ZIPQRCMTR5-ZIPQRCMGO5);

ZIPQRCM1TOT = ZIPQRCMDC1 + ZIPQRCMFU1 + ZIPQRCMCH1 + ZIPQRCMTS1 + ZIPQRCMGO1 + ZIPQRCMTR1 ;
ZIPQRCM2TOT = ZIPQRCMDC2 + ZIPQRCMFU2 + ZIPQRCMCH2 + ZIPQRCMTS2 + ZIPQRCMGO2 + ZIPQRCMTR2 ;
ZIPQRCM5TOT = ZIPQRCMDC5 + ZIPQRCMFU5 + ZIPQRCMCH5 + ZIPQRCMTS5 + ZIPQRCMGO5 + ZIPQRCMTR5 ;
ZIPQRCMANT1TOT = ZIPQRCMDCANT1 + ZIPQRCMFUANT1 + ZIPQRCMCHANT1 + ZIPQRCMTSANT1 + ZIPQRCMGOANT1 + ZIPQRCMTRANT1 ;

regle 511200:
application : bareme , iliad , batch ;


pour z=1,2:
ZIPQPRRVz = positif(somme(i=C,1..4 : TEGLPRRi)+somme(i=V,C,1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTz*TERPQPRRV/TETONEQUO1)
         + (1 - positif(somme(i=C,1..4 : TEGLPRRi)+somme(i=V,C,1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT);
ZIPQPRRANTV1 = positif(somme(i=C,1..4 : TEGLPRRi)+somme(i=V,C,1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTANT1*TERPQPRRV/TETONEQUO1)
         + (1 - positif(somme(i=C,1..4 : TEGLPRRi)+somme(i=V,C,1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT
        );
ZIPQPRRV5 = positif(somme(i=C,1..4 : TEGLPRRiM)+somme(i=V,C,1..4 : TEGLPRRZiM)+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLRVOTOTM+TEGLRFTOTM) *arr(IQUOTOT5*TERPQPRRVM/TETONEQUOM1)
         + (1 - positif(somme(i=C,1..4 : TEGLPRRiM)+somme(i=V,C,1..4 : TEGLPRRZiM)+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLRVOTOTM+TEGLRFTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT);
pour z=1,2:
ZIPQPRRCz = positif(somme(i=1..4 : TEGLPRRi)+somme(i=V,C,1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTz*TERPQPRRC/TETONEQUO1)
         + (1 - positif(somme(i=1..4 : TEGLPRRi)+somme(i=V,C,1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRVz);
ZIPQPRRANTC1 = positif(somme(i=1..4 : TEGLPRRi)+somme(i=V,C,1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTANT1*TERPQPRRC/TETONEQUO1)
         + (1 - positif(somme(i=1..4 : TEGLPRRi)+somme(i=V,C,1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANTV1
        );
ZIPQPRRC5 = positif(somme(i=1..4 : TEGLPRRiM)+somme(i=V,C,1..4 : TEGLPRRZiM)+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLRVOTOTM+TEGLRFTOTM) *arr(IQUOTOT5*TERPQPRRCM/TETONEQUOM1)
         + (1 - positif(somme(i=1..4 : TEGLPRRiM)+somme(i=V,C,1..4 : TEGLPRRZiM)+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLRVOTOTM+TEGLRFTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRRV5);
pour z=1,2:
ZIPQPRR1z = positif(somme(i=2..4 : TEGLPRRi)+somme(i=V,C,1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTz*TERPQPRR1/TETONEQUO1)
         + (1 - positif(somme(i=2..4 : TEGLPRRi)+somme(i=V,C,1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRVz-ZIPQPRRCz);
ZIPQPRRANT11 = positif(somme(i=2..4 : TEGLPRRi)+somme(i=V,C,1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTANT1*TERPQPRR1/TETONEQUO1)
         + (1 - positif(somme(i=2..4 : TEGLPRRi)+somme(i=V,C,1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANTV1-ZIPQPRRANTC1
        );
ZIPQPRR15 = positif(somme(i=2..4 : TEGLPRRiM)+somme(i=V,C,1..4 : TEGLPRRZiM)+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLRVOTOTM+TEGLRFTOTM) *arr(IQUOTOT5*TERPQPRR1M/TETONEQUOM1)
         + (1 - positif(somme(i=2..4 : TEGLPRRiM)+somme(i=V,C,1..4 : TEGLPRRZiM)+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLRVOTOTM+TEGLRFTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRRV5-ZIPQPRRC5);
pour z=1,2:
ZIPQPRR2z = positif(somme(i=3,4 : TEGLPRRi)+somme(i=V,C,1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTz*TERPQPRR2/TETONEQUO1)
         + (1 - positif(somme(i=3,4 : TEGLPRRi)+somme(i=V,C,1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRVz-ZIPQPRRCz-ZIPQPRR1z);
ZIPQPRRANT21 = positif(somme(i=3,4 : TEGLPRRi)+somme(i=V,C,1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTANT1*TERPQPRR2/TETONEQUO1)
         + (1 - positif(somme(i=3,4 : TEGLPRRi)+somme(i=V,C,1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANTV1-ZIPQPRRANTC1-ZIPQPRRANT11
        );
ZIPQPRR25 = positif(somme(i=3,4 : TEGLPRRiM)+somme(i=V,C,1..4 : TEGLPRRZiM)+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLRVOTOTM+TEGLRFTOTM) *arr(IQUOTOT5*TERPQPRR2M/TETONEQUOM1)
         + (1 - positif(somme(i=3,4 : TEGLPRRiM)+somme(i=V,C,1..4 : TEGLPRRZiM)+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLRVOTOTM+TEGLRFTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRRV5-ZIPQPRRC5-ZIPQPRR15);
pour z=1,2:
ZIPQPRR3z = positif(TEGLPRR4+somme(i=V,C,1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTz*TERPQPRR3/TETONEQUO1)
         + (1 - positif(TEGLPRR4+somme(i=V,C,1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRVz-ZIPQPRRCz-ZIPQPRR1z-ZIPQPRR2z);
ZIPQPRRANT31 = positif(TEGLPRR4+somme(i=V,C,1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTANT1*TERPQPRR3/TETONEQUO1)
         + (1 - positif(TEGLPRR4+somme(i=V,C,1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANTV1-ZIPQPRRANTC1-ZIPQPRRANT11-ZIPQPRRANT21
        );
ZIPQPRR35 = positif(TEGLPRR4M+somme(i=V,C,1..4 : TEGLPRRZiM)+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLRVOTOTM+TEGLRFTOTM) *arr(IQUOTOT5*TERPQPRR3M/TETONEQUOM1)
         + (1 - positif(TEGLPRR4M+somme(i=V,C,1..4 : TEGLPRRZiM)+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLRVOTOTM+TEGLRFTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRRV5-ZIPQPRRC5-ZIPQPRR15-ZIPQPRR25);
pour z=1,2:
ZIPQPRR4z = positif(somme(i=V,C,1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTz*TERPQPRR4/TETONEQUO1)
         + (1 - positif(somme(i=V,C,1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRVz-ZIPQPRRCz-ZIPQPRR1z-ZIPQPRR2z-ZIPQPRR3z);
ZIPQPRRANT41 = positif(somme(i=V,C,1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTANT1*TERPQPRR4/TETONEQUO1)
         + (1 - positif(somme(i=V,C,1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANTV1-ZIPQPRRANTC1-ZIPQPRRANT11-ZIPQPRRANT21-ZIPQPRRANT31
        );
ZIPQPRR45 = positif(somme(i=V,C,1..4 : TEGLPRRZiM)+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLRVOTOTM+TEGLRFTOTM) *arr(IQUOTOT5*TERPQPRR4M/TETONEQUOM1)
         + (1 - positif(somme(i=V,C,1..4 : TEGLPRRZiM)+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLRVOTOTM+TEGLRFTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRRV5-ZIPQPRRC5-ZIPQPRR15-ZIPQPRR25-ZIPQPRR35);

ZIPQPRR1TOT = somme(i=V,C,1..4 : ZIPQPRRi1) ;
ZIPQPRR2TOT = somme(i=V,C,1..4 : ZIPQPRRi2) ;
ZIPQPRR5TOT = somme(i=V,C,1..4 : ZIPQPRRi5) ;
ZIPQPRRANT1TOT = somme(i=V,C,1..4 : ZIPQPRRANTi1) ;

regle 511210:
application : bareme , iliad , batch ;


pour z=1,2:
ZIPQPRRZVz = positif(somme(i=C,1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTz*TERPQPRRZV/TETONEQUO1)
         + (1 - positif(somme(i=C,1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRzTOT);
ZIPQPRRANTZV1 = positif(somme(i=C,1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTANT1*TERPQPRRZV/TETONEQUO1)
         + (1 - positif(somme(i=C,1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANT1TOT
        );
ZIPQPRRZV5 = positif(somme(i=C,1..4 : TEGLPRRZiM)+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLRVOTOTM+TEGLRFTOTM) *arr(IQUOTOT5*TERPQPRRZVM/TETONEQUOM1)
         + (1 - positif(somme(i=C,1..4 : TEGLPRRZiM)+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLRVOTOTM+TEGLRFTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRR5TOT);
pour z=1,2:
ZIPQPRRZCz = positif(somme(i=1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTz*TERPQPRRZC/TETONEQUO1)
         + (1 - positif(somme(i=1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRzTOT-ZIPQPRRZVz);
ZIPQPRRANTZC1 = positif(somme(i=1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTANT1*TERPQPRRZC/TETONEQUO1)
         + (1 - positif(somme(i=1..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANT1TOT-ZIPQPRRANTZV1
        );
ZIPQPRRZC5 = positif(somme(i=1..4 : TEGLPRRZiM)+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLRVOTOTM+TEGLRFTOTM) *arr(IQUOTOT5*TERPQPRRZCM/TETONEQUOM1)
         + (1 - positif(somme(i=1..4 : TEGLPRRZiM)+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLRVOTOTM+TEGLRFTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRR5TOT-ZIPQPRRZV5);
pour z=1,2:
ZIPQPRRZ1z = positif(somme(i=2..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTz*TERPQPRRZ1/TETONEQUO1)
         + (1 - positif(somme(i=2..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRzTOT-ZIPQPRRZVz-ZIPQPRRZCz);
ZIPQPRRANTZ11 = positif(somme(i=2..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTANT1*TERPQPRRZ1/TETONEQUO1)
         + (1 - positif(somme(i=2..4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANT1TOT-ZIPQPRRANTZV1-ZIPQPRRANTZC1
        );
ZIPQPRRZ15 = positif(somme(i=2..4 : TEGLPRRZiM)+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLRVOTOTM+TEGLRFTOTM) *arr(IQUOTOT5*TERPQPRRZ1M/TETONEQUOM1)
         + (1 - positif(somme(i=2..4 : TEGLPRRZiM)+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLRVOTOTM+TEGLRFTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRR5TOT-ZIPQPRRZV5-ZIPQPRRZC5);
pour z=1,2:
ZIPQPRRZ2z = positif(somme(i=3,4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTz*TERPQPRRZ2/TETONEQUO1)
         + (1 - positif(somme(i=3,4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRzTOT-ZIPQPRRZVz-ZIPQPRRZCz-ZIPQPRRZ1z);
ZIPQPRRANTZ21 = positif(somme(i=3,4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTANT1*TERPQPRRZ2/TETONEQUO1)
         + (1 - positif(somme(i=3,4 : TEGLPRRZi)+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANT1TOT-ZIPQPRRANTZV1-ZIPQPRRANTZC1-ZIPQPRRANTZ11
        );
ZIPQPRRZ25 = positif(somme(i=3,4 : TEGLPRRZiM)+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLRVOTOTM+TEGLRFTOTM) *arr(IQUOTOT5*TERPQPRRZ2M/TETONEQUOM1)
         + (1 - positif(somme(i=3,4 : TEGLPRRZiM)+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLRVOTOTM+TEGLRFTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRR5TOT-ZIPQPRRZV5-ZIPQPRRZC5-ZIPQPRRZ15);
pour z=1,2:
ZIPQPRRZ3z = positif(TEGLPRRZ4+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTz*TERPQPRRZ3/TETONEQUO1)
         + (1 - positif(TEGLPRRZ4+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRzTOT-ZIPQPRRZVz-ZIPQPRRZCz-ZIPQPRRZ1z-ZIPQPRRZ2z);
ZIPQPRRANTZ31 = positif(TEGLPRRZ4+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTANT1*TERPQPRRZ3/TETONEQUO1)
         + (1 - positif(TEGLPRRZ4+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANT1TOT-ZIPQPRRANTZV1-ZIPQPRRANTZC1-ZIPQPRRANTZ11-ZIPQPRRANTZ21
        );
ZIPQPRRZ35 = positif(TEGLPRRZ4M+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLRVOTOTM+TEGLRFTOTM) *arr(IQUOTOT5*TERPQPRRZ3M/TETONEQUOM1)
         + (1 - positif(TEGLPRRZ4M+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLRVOTOTM+TEGLRFTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRR5TOT-ZIPQPRRZV5-ZIPQPRRZC5-ZIPQPRRZ15-ZIPQPRRZ25);
pour z=1,2:
ZIPQPRRZ4z = positif(TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTz*TERPQPRRZ4/TETONEQUO1)
         + (1 - positif(TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRzTOT-ZIPQPRRZVz-ZIPQPRRZCz-ZIPQPRRZ1z-ZIPQPRRZ2z-ZIPQPRRZ3z);
ZIPQPRRANTZ41 = positif(TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT) * arr(IQUOTOTANT1*TERPQPRRZ4/TETONEQUO1)
         + (1 - positif(TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT+TEGLRFTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANT1TOT-ZIPQPRRANTZV1-ZIPQPRRANTZC1-ZIPQPRRANTZ11-ZIPQPRRANTZ21-ZIPQPRRANTZ31
        );
ZIPQPRRZ45 = positif(TEGLTSTOTM+TEGLTSREMPTOTM+TEGLRVOTOTM+TEGLRFTOTM) *arr(IQUOTOT5*TERPQPRRZ4M/TETONEQUOM1)
         + (1 - positif(TEGLTSTOTM+TEGLTSREMPTOTM+TEGLRVOTOTM+TEGLRFTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRR5TOT-ZIPQPRRZV5-ZIPQPRRZC5-ZIPQPRRZ15-ZIPQPRRZ25-ZIPQPRRZ35);

ZIPQPRRZ1TOT = somme(i=V,C,1..4 : ZIPQPRRZi1) ;
ZIPQPRRZ2TOT = somme(i=V,C,1..4 : ZIPQPRRZi2) ;
ZIPQPRRZ5TOT = somme(i=V,C,1..4 : ZIPQPRRZi5) ;
ZIPQPRRANTZ1TOT = somme(i=V,C,1..4 : ZIPQPRRANTZi1) ;

regle 511220:
application : bareme , iliad , batch ;


pour z=1,2:
ZIPQRF1z = positif(TEGLRF2+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT) * arr(IQUOTOTz*TERPQRF1/TETONEQUO1)
         + (1 - positif(TEGLRF2+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRzTOT-ZIPQPRRZzTOT);
ZIPQRFANT11 = positif(TEGLRF2+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT) * arr(IQUOTOTANT1*TERPQRF1/TETONEQUO1)
         + (1 - positif(TEGLRF2+TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANT1TOT-ZIPQPRRANTZ1TOT
        );
ZIPQRF15 = positif(TEGLRF2M+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLRVOTOTM) *arr(IQUOTOT5*TERPQRF1M/TETONEQUOM1)
         + (1 - positif(TEGLRF2M+TEGLTSTOTM+TEGLTSREMPTOTM+TEGLRVOTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRR5TOT-ZIPQPRRZ5TOT);
pour z=1,2:
ZIPQRF2z = positif(TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT) * arr(IQUOTOTz*TERPQRF2/TETONEQUO1)
         + (1 - positif(TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRzTOT-ZIPQRF1z-ZIPQPRRZzTOT);
ZIPQRFANT21 = positif(TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT) * arr(IQUOTOTANT1*TERPQRF2/TETONEQUO1)
         + (1 - positif(TEGLTSTOT+TEGLTSREMPTOT+TEGLRVOTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANT1TOT-ZIPQRFANT11-ZIPQPRRANTZ1TOT
        );
ZIPQRF25 = positif(TEGLTSTOTM+TEGLTSREMPTOTM+TEGLRVOTOTM) *arr(IQUOTOT5*TERPQRF2M/TETONEQUOM1)
         + (1 - positif(TEGLTSTOTM+TEGLTSREMPTOTM+TEGLRVOTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRR5TOT-ZIPQRF15-ZIPQPRRZ5TOT);

ZIPQRF1TOT = somme(i=1,2 : ZIPQRFi1) ;
ZIPQRF2TOT = somme(i=1,2 : ZIPQRFi2) ;
ZIPQRF5TOT = somme(i=1,2 : ZIPQRFi5) ;
ZIPQRFANT1TOT = somme(i=1,2 : ZIPQRFANTi1) ;

regle 511230:
application : bareme , iliad , batch ;


pour z=1,2:
ZIPQRVOz = positif(TEGLRVO5+TEGLRVO6+TEGLRVO7+TEGLTSTOT+TEGLTSREMPTOT) * arr(IQUOTOTz*TERPQRVO/TETONEQUO1)
         + (1 - positif(TEGLRVO5+TEGLRVO6+TEGLRVO7+TEGLTSTOT+TEGLTSREMPTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRzTOT-ZIPQRFzTOT-ZIPQPRRZzTOT);
ZIPQRVOANT1 = positif(TEGLRVO5+TEGLRVO6+TEGLRVO7+TEGLTSTOT+TEGLTSREMPTOT) * arr(IQUOTOTANT1*TERPQRVO/TETONEQUO1)
         + (1 - positif(TEGLRVO5+TEGLRVO6+TEGLRVO7+TEGLTSTOT+TEGLTSREMPTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANT1TOT-ZIPQRFANT1TOT-ZIPQPRRANTZ1TOT
        );
ZIPQRVO5 = positif(TEGLRVO5M+TEGLRVO6M+TEGLRVO7M+TEGLTSTOTM+TEGLTSREMPTOTM) *arr(IQUOTOT5*TERPQRVOM/TETONEQUOM1)
         + (1 - positif(TEGLRVO5M+TEGLRVO6M+TEGLRVO7M+TEGLTSTOTM+TEGLTSREMPTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRR5TOT-ZIPQRF5TOT-ZIPQPRRZ5TOT);

regle 511240:
application : bareme , iliad , batch ;


pour z=1,2:
ZIPQRVO5z = positif(TEGLRVO6+TEGLRVO7+TEGLTSTOT+TEGLTSREMPTOT) * arr(IQUOTOTz*TERPQRVO5/TETONEQUO1)
         + (1 - positif(TEGLRVO6+TEGLRVO7+TEGLTSTOT+TEGLTSREMPTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRzTOT-ZIPQRFzTOT-ZIPQRVOz-ZIPQPRRZzTOT);
ZIPQRVO5ANT1 = positif(TEGLRVO6+TEGLRVO7+TEGLTSTOT+TEGLTSREMPTOT) * arr(IQUOTOTANT1*TERPQRVO5/TETONEQUO1)
         + (1 - positif(TEGLRVO6+TEGLRVO7+TEGLTSTOT+TEGLTSREMPTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANT1TOT-ZIPQRFANT1TOT-ZIPQRVOANT1-ZIPQPRRANTZ1TOT
        );
ZIPQRVO55 = positif(TEGLRVO6M+TEGLRVO7M+TEGLTSTOTM+TEGLTSREMPTOTM) *arr(IQUOTOT5*TERPQRVO5M/TETONEQUOM1)
         + (1 - positif(TEGLRVO6M+TEGLRVO7M+TEGLTSTOTM+TEGLTSREMPTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRR5TOT-ZIPQRF5TOT-ZIPQRVO5-ZIPQPRRZ5TOT);

regle 511250:
application : bareme , iliad , batch ;


pour z=1,2:
ZIPQRVO6z = positif(TEGLRVO7+TEGLTSTOT+TEGLTSREMPTOT) * arr(IQUOTOTz*TERPQRVO6/TETONEQUO1)
         + (1 - positif(TEGLRVO7+TEGLTSTOT+TEGLTSREMPTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRzTOT-ZIPQRFzTOT-ZIPQRVOz-ZIPQRVO5z-ZIPQPRRZzTOT);
ZIPQRVO6ANT1 = positif(TEGLRVO7+TEGLTSTOT+TEGLTSREMPTOT) * arr(IQUOTOTANT1*TERPQRVO6/TETONEQUO1)
         + (1 - positif(TEGLRVO7+TEGLTSTOT+TEGLTSREMPTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANT1TOT-ZIPQRFANT1TOT-ZIPQRVOANT1-ZIPQRVO5ANT1-ZIPQPRRANTZ1TOT
        );
ZIPQRVO65 = positif(TEGLRVO7M+TEGLTSTOTM+TEGLTSREMPTOTM) *arr(IQUOTOT5*TERPQRVO6M/TETONEQUOM1)
         + (1 - positif(TEGLRVO7M+TEGLTSTOTM+TEGLTSREMPTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRR5TOT-ZIPQRF5TOT-ZIPQRVO5-ZIPQRVO55-ZIPQPRRZ5TOT);

regle 511260:
application : bareme , iliad , batch ;


pour z=1,2:
ZIPQRVO7z = positif(TEGLTSTOT+TEGLTSREMPTOT) * arr(IQUOTOTz*TERPQRVO7/TETONEQUO1)
         + (1 - positif(TEGLTSTOT+TEGLTSREMPTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRzTOT-ZIPQRFzTOT-ZIPQPRRZzTOT-ZIPQRVOz-ZIPQRVO5z-ZIPQRVO6z);
ZIPQRVO7ANT1 = positif(TEGLTSTOT+TEGLTSREMPTOT) * arr(IQUOTOTANT1*TERPQRVO7/TETONEQUO1)
         + (1 - positif(TEGLTSTOT+TEGLTSREMPTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANT1TOT-ZIPQPRRANTZ1TOT-ZIPQRFANT1TOT-ZIPQRVOANT1-ZIPQRVO5ANT1-ZIPQRVO6ANT1
        );
ZIPQRVO75 = positif(TEGLTSTOTM+TEGLTSREMPTOTM) *arr(IQUOTOT5*TERPQRVO7M/TETONEQUOM1)
         + (1 - positif(TEGLTSTOTM+TEGLTSREMPTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRR5TOT-ZIPQRF5TOT-ZIPQRVO5-ZIPQRVO55-ZIPQRVO65-ZIPQPRRZ5TOT);

ZIPQRVO1TOT = ZIPQRVO1 + ZIPQRVO51 + ZIPQRVO61 + ZIPQRVO71 ;
ZIPQRVO2TOT = ZIPQRVO2 + ZIPQRVO52 + ZIPQRVO62 + ZIPQRVO72 ;
ZIPQRVO5TOT = ZIPQRVO5 +ZIPQRVO55 +ZIPQRVO65 +ZIPQRVO75 ;
ZIPQRVOANT1TOT = ZIPQRVOANT1 + ZIPQRVO5ANT1 + ZIPQRVO6ANT1 + ZIPQRVO7ANT1 ;

regle 511270:
application : bareme , iliad , batch ;


pour z=1,2:
ZIPQTSVz = positif(somme(i= C,1..4 : TEGLTSi)+TEGLTSREMPTOT) * arr(IQUOTOTz*TERPQTSV/TETONEQUO1)
         + (1 - positif(somme(i= C,1..4 : TEGLTSi)+TEGLTSREMPTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRzTOT-ZIPQRFzTOT-ZIPQRVOzTOT-ZIPQPRRZzTOT);
ZIPQTSANTV1 = positif(somme(i= C,1..4 : TEGLTSi)+TEGLTSREMPTOT) * arr(IQUOTOTANT1*TERPQTSV/TETONEQUO1)
         + (1 - positif(somme(i=C,1..4 : TEGLTSi)+TEGLTSREMPTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANT1TOT-ZIPQRFANT1TOT-ZIPQRVOANT1TOT-ZIPQPRRANTZ1TOT
        );
ZIPQTSV5 = positif(somme(i= C,1..4 : TEGLTSiM)+TEGLTSREMPTOTM) *arr(IQUOTOT5*TERPQTSVM/TETONEQUOM1)
         + (1 - positif(somme(i=C,1..4 : TEGLTSiM)+TEGLTSREMPTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRR5TOT-ZIPQRF5TOT-ZIPQRVO5TOT-ZIPQPRRZ5TOT);
pour z=1,2:
ZIPQTSCz = positif(somme(i= 1..4 : TEGLTSi)+TEGLTSREMPTOT) * arr(IQUOTOTz*TERPQTSC/TETONEQUO1)
         + (1 - positif(somme(i= 1..4 : TEGLTSi)+TEGLTSREMPTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRzTOT-ZIPQRFzTOT-ZIPQRVOzTOT-ZIPQPRRZzTOT-ZIPQTSVz);
ZIPQTSANTC1 = positif(somme(i= 1..4 : TEGLTSi)+TEGLTSREMPTOT) * arr(IQUOTOTANT1*TERPQTSC/TETONEQUO1)
         + (1 - positif(somme(i= 1..4 : TEGLTSi)+TEGLTSREMPTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANT1TOT-ZIPQRFANT1TOT-ZIPQRVOANT1TOT-ZIPQPRRANTZ1TOT-ZIPQTSANTV1
        );
ZIPQTSC5 = positif(somme(i= 1..4 : TEGLTSiM)+TEGLTSREMPTOTM) *arr(IQUOTOT5*TERPQTSCM/TETONEQUOM1)
         + (1 - positif(somme(i= 1..4 : TEGLTSiM)+TEGLTSREMPTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRR5TOT-ZIPQRF5TOT-ZIPQRVO5TOT-ZIPQPRRZ5TOT-ZIPQTSV5);
pour z=1,2:
ZIPQTS1z = positif(somme(i= 2..4 : TEGLTSi)+TEGLTSREMPTOT) * arr(IQUOTOTz*TERPQTS1/TETONEQUO1)
         + (1 - positif(somme(i= 2..4 : TEGLTSi)+TEGLTSREMPTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRzTOT-ZIPQRFzTOT-ZIPQRVOzTOT-ZIPQPRRZzTOT-ZIPQTSVz-ZIPQTSCz);
ZIPQTSANT11 = positif(somme(i= 2..4 : TEGLTSi)+TEGLTSREMPTOT) * arr(IQUOTOTANT1*TERPQTS1/TETONEQUO1)
         + (1 - positif(somme(i= 2..4 : TEGLTSi)+TEGLTSREMPTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANT1TOT-ZIPQRFANT1TOT-ZIPQRVOANT1TOT-ZIPQPRRANTZ1TOT-ZIPQTSANTV1-ZIPQTSANTC1
        );
ZIPQTS15 = positif(somme(i= 2..4 : TEGLTSiM)+TEGLTSREMPTOTM) *arr(IQUOTOT5*TERPQTS1M/TETONEQUOM1)
         + (1 - positif(somme(i= 2..4 : TEGLTSiM)+TEGLTSREMPTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRR5TOT-ZIPQRF5TOT-ZIPQRVO5TOT-ZIPQPRRZ5TOT-ZIPQTSV5-ZIPQTSC5);
pour z=1,2:
ZIPQTS2z = positif(somme(i= 3,4 : TEGLTSi)+TEGLTSREMPTOT) * arr(IQUOTOTz*TERPQTS2/TETONEQUO1)
         + (1 - positif(somme(i= 3,4 : TEGLTSi)+TEGLTSREMPTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRzTOT-ZIPQPRRZzTOT-ZIPQRFzTOT-ZIPQRVOzTOT-ZIPQTSVz-ZIPQTSCz-ZIPQTS1z);
ZIPQTSANT21 = positif(somme(i= 3,4 : TEGLTSi)+TEGLTSREMPTOT) * arr(IQUOTOTANT1*TERPQTS2/TETONEQUO1)
         + (1 - positif(somme(i= 3,4 : TEGLTSi)+TEGLTSREMPTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANT1TOT-ZIPQPRRANTZ1TOT-ZIPQRFANT1TOT-ZIPQRVOANT1TOT-ZIPQTSANTV1-ZIPQTSANTC1-ZIPQTSANT11
        );
ZIPQTS25 = positif(somme(i= 3,4 : TEGLTSiM)+TEGLTSREMPTOTM) *arr(IQUOTOT5*TERPQTS2M/TETONEQUOM1)
         + (1 - positif(somme(i= 3,4 : TEGLTSiM)+TEGLTSREMPTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRR5TOT-ZIPQRF5TOT-ZIPQRVO5TOT-ZIPQPRRZ5TOT-ZIPQTSV5-ZIPQTSC5-ZIPQTS15);
pour z=1,2:
ZIPQTS3z = positif(TEGLTS4+TEGLTSREMPTOT) * arr(IQUOTOTz*TERPQTS3/TETONEQUO1)
         + (1 - positif(TEGLTS4+TEGLTSREMPTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRzTOT-ZIPQPRRZzTOT-ZIPQRFzTOT-ZIPQRVOzTOT-ZIPQTSVz-ZIPQTSCz-ZIPQTS1z-ZIPQTS2z);
ZIPQTSANT31 = positif(TEGLTS4+TEGLTSREMPTOT) * arr(IQUOTOTANT1*TERPQTS3/TETONEQUO1)
         + (1 - positif(TEGLTS4+TEGLTSREMPTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANT1TOT-ZIPQPRRANTZ1TOT-ZIPQRFANT1TOT-ZIPQRVOANT1TOT-ZIPQTSANTV1-ZIPQTSANTC1-ZIPQTSANT11-ZIPQTSANT21
        );
ZIPQTS35 = positif(TEGLTS4M+TEGLTSREMPTOTM) *arr(IQUOTOT5*TERPQTS3M/TETONEQUOM1)
         + (1 - positif(TEGLTS4M+TEGLTSREMPTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRR5TOT-ZIPQRF5TOT-ZIPQRVO5TOT-ZIPQPRRZ5TOT-ZIPQTSV5-ZIPQTSC5-ZIPQTS15-ZIPQTS25);
pour z=1,2:
ZIPQTS4z = positif(TEGLTSREMPTOT) * arr(IQUOTOTz*TERPQTS4/TETONEQUO1)
         + (1 - positif(TEGLTSREMPTOT)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRzTOT-ZIPQPRRZzTOT-ZIPQRFzTOT-ZIPQRVOzTOT-ZIPQTSVz-ZIPQTSCz-ZIPQTS1z-ZIPQTS2z-ZIPQTS3z);
ZIPQTSANT41 = positif(TEGLTSREMPTOT) * arr(IQUOTOTANT1*TERPQTS4/TETONEQUO1)
         + (1 - positif(TEGLTSREMPTOT)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANT1TOT-ZIPQPRRANTZ1TOT-ZIPQRFANT1TOT-ZIPQRVOANT1TOT-ZIPQTSANTV1-ZIPQTSANTC1-ZIPQTSANT11-ZIPQTSANT21-ZIPQTSANT31
        );
ZIPQTS45 = positif(TEGLTSREMPTOTM) *arr(IQUOTOT5*TERPQTS4M/TETONEQUOM1)
         + (1 - positif(TEGLTSREMPTOTM)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRR5TOT-ZIPQRF5TOT-ZIPQRVO5TOT-ZIPQPRRZ5TOT-ZIPQTSV5-ZIPQTSC5-ZIPQTS15-ZIPQTS25-ZIPQTS35);

ZIPQTS1TOT = somme(i=V,C,1..4 : ZIPQTSi1) ;
ZIPQTS2TOT = somme(i=V,C,1..4 : ZIPQTSi2) ;
ZIPQTS5TOT = somme(i=V,C,1..4 : ZIPQTSi5) ;
ZIPQTSANT1TOT = somme(i=V,C,1..4 : ZIPQTSANTi1) ;

regle 511280:
application : bareme , iliad , batch ;


pour z=1,2:
ZIPQTSREMPVz = positif(somme(i= C,1..4 : TEGLTSREMPi)) * arr(IQUOTOTz*TERPQTSREMPV/TETONEQUO1)
         + (1 - positif(somme(i= C,1..4 : TEGLTSREMPi))) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRzTOT-ZIPQPRRZzTOT-ZIPQRFzTOT-ZIPQRVOzTOT-ZIPQTSzTOT);
ZIPQTSREMPANTV1 = positif(somme(i= C,1..4 : TEGLTSREMPi)) * arr(IQUOTOTANT1*TERPQTSREMPV/TETONEQUO1)
         + (1 - positif(somme(i= C,1..4 : TEGLTSREMPi))) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANT1TOT-ZIPQPRRANTZ1TOT-ZIPQRFANT1TOT-ZIPQRVOANT1TOT-ZIPQTSANT1TOT
        );
ZIPQTSREMPV5 = positif(somme(i= C,1..4 : TEGLTSREMPiM)) *arr(IQUOTOT5*TERPQTSREMPVM/TETONEQUOM1)
         + (1 - positif(somme(i= C,1..4 : TEGLTSREMPiM))) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRR5TOT-ZIPQPRRZ5TOT-ZIPQRF5TOT-ZIPQRVO5TOT-ZIPQTS5TOT);
pour z=1,2:
ZIPQTSREMPCz = positif(somme(i= 1..4 : TEGLTSREMPi)) * arr(IQUOTOTz*TERPQTSREMPC/TETONEQUO1)
         + (1 - positif(somme(i= 1..4 : TEGLTSREMPi))) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRzTOT-ZIPQPRRZzTOT-ZIPQRFzTOT-ZIPQRVOzTOT-ZIPQTSzTOT-ZIPQTSREMPVz);
ZIPQTSREMPANTC1 = positif(somme(i= 1..4 : TEGLTSREMPi)) * arr(IQUOTOTANT1*TERPQTSREMPC/TETONEQUO1)
         + (1 - positif(somme(i= 1..4 : TEGLTSREMPi))) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANT1TOT-ZIPQPRRANTZ1TOT-ZIPQRFANT1TOT-ZIPQRVOANT1TOT-ZIPQTSANT1TOT-ZIPQTSREMPANTV1
        );
ZIPQTSREMPC5 = positif(somme(i= 1..4 : TEGLTSREMPiM)) *arr(IQUOTOT5*TERPQTSREMPCM/TETONEQUOM1)
         + (1 - positif(somme(i= 1..4 : TEGLTSREMPiM))) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRR5TOT-ZIPQPRRZ5TOT-ZIPQRF5TOT-ZIPQRVO5TOT-ZIPQTS5TOT-ZIPQTSREMPV5);
pour z=1,2:
ZIPQTSREMP1z = positif(somme(i= 2..4 : TEGLTSREMPi)) * arr(IQUOTOTz*TERPQTSREMP1/TETONEQUO1)
         + (1 - positif(somme(i= 2..4 : TEGLTSREMPi))) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRzTOT-ZIPQPRRZzTOT-ZIPQRFzTOT-ZIPQRVOzTOT-ZIPQTSzTOT-ZIPQTSREMPVz-ZIPQTSREMPCz);
ZIPQTSREMPANT11 = positif(somme(i= 2..4 : TEGLTSREMPi)) * arr(IQUOTOTANT1*TERPQTSREMP1/TETONEQUO1)
         + (1 - positif(somme(i= 2..4 : TEGLTSREMPi))) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANT1TOT-ZIPQPRRANTZ1TOT-ZIPQRFANT1TOT-ZIPQRVOANT1TOT-ZIPQTSANT1TOT-ZIPQTSREMPANTV1-ZIPQTSREMPANTC1
        );
ZIPQTSREMP15 = positif(somme(i= 2..4 : TEGLTSREMPiM)) *arr(IQUOTOT5*TERPQTSREMP1M/TETONEQUOM1)
         + (1 - positif(somme(i= 2..4 : TEGLTSREMPiM))) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRR5TOT-ZIPQPRRZ5TOT-ZIPQRF5TOT-ZIPQRVO5TOT-ZIPQTS5TOT-ZIPQTSREMPV5-ZIPQTSREMPC5);
pour z=1,2:
ZIPQTSREMP2z = positif(somme(i= 3,4 : TEGLTSREMPi)) * arr(IQUOTOTz*TERPQTSREMP2/TETONEQUO1)
         + (1 - positif(somme(i= 3,4 : TEGLTSREMPi))) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRzTOT-ZIPQPRRZzTOT-ZIPQRFzTOT-ZIPQRVOzTOT-ZIPQTSzTOT-ZIPQTSREMPVz-ZIPQTSREMPCz-ZIPQTSREMP1z);
ZIPQTSREMPANT21 = positif(somme(i= 3,4 : TEGLTSREMPi)) * arr(IQUOTOTANT1*TERPQTSREMP2/TETONEQUO1)
         + (1 - positif(somme(i= 3,4 : TEGLTSREMPi))) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANT1TOT-ZIPQPRRANTZ1TOT-ZIPQRFANT1TOT-ZIPQRVOANT1TOT-ZIPQTSANT1TOT-ZIPQTSREMPANTV1-ZIPQTSREMPANTC1-ZIPQTSREMPANT11
        );
ZIPQTSREMP25 = positif(somme(i= 3,4 : TEGLTSREMPiM)) *arr(IQUOTOT5*TERPQTSREMP2M/TETONEQUOM1)
         + (1 - positif(somme(i= 3,4 : TEGLTSREMPiM))) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRR5TOT-ZIPQPRRZ5TOT-ZIPQRF5TOT-ZIPQRVO5TOT-ZIPQTS5TOT-ZIPQTSREMPV5-ZIPQTSREMPC5-ZIPQTSREMP15);
pour z=1,2:
ZIPQTSREMP3z = positif(TEGLTSREMP4) * arr(IQUOTOTz*TERPQTSREMP3/TETONEQUO1)
         + (1 - positif(TEGLTSREMP4)) * 
         (IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRzTOT-ZIPQPRRZzTOT-ZIPQRFzTOT-ZIPQRVOzTOT-ZIPQTSzTOT-ZIPQTSREMPVz-ZIPQTSREMPCz-ZIPQTSREMP1z-ZIPQTSREMP2z);
ZIPQTSREMPANT31 = positif(TEGLTSREMP4) * arr(IQUOTOTANT1*TERPQTSREMP3/TETONEQUO1)
         + (1 - positif(TEGLTSREMP4)) * 
         (IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANT1TOT-ZIPQPRRANTZ1TOT-ZIPQRFANT1TOT-ZIPQRVOANT1TOT-ZIPQTSANT1TOT-ZIPQTSREMPANTV1-ZIPQTSREMPANTC1-ZIPQTSREMPANT11-ZIPQTSREMPANT21
        );
ZIPQTSREMP35 = positif(TEGLTSREMP4M) *arr(IQUOTOT5*TERPQTSREMP3M/TETONEQUOM1)
         + (1 - positif(TEGLTSREMP4M)) * 
           (IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRR5TOT-ZIPQPRRZ5TOT-ZIPQRF5TOT-ZIPQRVO5TOT-ZIPQTS5TOT-ZIPQTSREMPV5-ZIPQTSREMPC5-ZIPQTSREMP15-ZIPQTSREMP25);
pour z=1,2:
ZIPQTSREMP4z = IQUOTOTz-ZIPQzTOT-ZIPQFzTOT-ZIPQPALIMzTOT-ZIPQRCMzTOT-ZIPQPRRzTOT-ZIPQPRRZzTOT-ZIPQRFzTOT-ZIPQRVOzTOT-ZIPQTSzTOT-ZIPQTSREMPVz-ZIPQTSREMPCz-ZIPQTSREMP1z-ZIPQTSREMP2z-ZIPQTSREMP3z;
ZIPQTSREMPANT41 = IQUOTOTANT1-ZIPQANT1TOT-ZIPQFANT1TOT-ZIPQPALIMANT1TOT-ZIPQRCMANT1TOT-ZIPQPRRANT1TOT-ZIPQPRRANTZ1TOT-ZIPQRFANT1TOT-ZIPQRVOANT1TOT-ZIPQTSANT1TOT-ZIPQTSREMPANTV1-ZIPQTSREMPANTC1-ZIPQTSREMPANT11-ZIPQTSREMPANT21-ZIPQTSREMPANT31;

ZIPQTSREMP45 = IQUOTOT5-ZIPQ5TOT-ZIPQF5TOT-ZIPQPALIM5TOT-ZIPQRCM5TOT-ZIPQPRR5TOT-ZIPQPRRZ5TOT-ZIPQRF5TOT-ZIPQRVO5TOT-ZIPQTS5TOT-ZIPQTSREMPV5-ZIPQTSREMPC5-ZIPQTSREMP15-ZIPQTSREMP25-ZIPQTSREMP35;

ZIPQTSREMP1TOT = somme(i=V,C,1..4 : ZIPQTSREMPi1) ;
ZIPQTSREMP2TOT = somme(i=V,C,1..4 : ZIPQTSREMPi2) ;
ZIPQTSREMP5TOT = somme(i=V,C,1..4 : ZIPQTSREMPi5) ;
ZIPQTSREMPANT1TOT = somme(i=V,C,1..4 : ZIPQTSREMPANTi1) ;

regle 511290:
application : bareme , iliad , batch ;


pour z=1,2:
IPQ0z = IN0z ;

IPQANT01 = INANT01 ;

regle 511300:
application : bareme , iliad , batch ;


pour z=1,2:
IPQRWBz = ZIPQRWBz * CODNWB;
pour z=1,2:
IPQRWAz = ZIPQRWAz * CODNWA;
pour z=1,2:
IPQRVGz = ZIPQRVGz * CODNVG;
pour z=1,2:
IPQ1z = ZIPQ1z * 1;
IPQANTRWB = ZIPQANTRWB * CODNWB;
IPQANTRWA = ZIPQANTRWA * CODNWA;
IPQANTRVG = ZIPQANTRVG * CODNVG;
IPQANT11 = ZIPQANT11 * 1;
pour z=1,2:
IPQ2z = ZIPQ2z * 2;
IPQANT21 = ZIPQANT21 * 2;
pour z=1,2:
IPQ3z = ZIPQ3z * 3;
IPQANT31 = ZIPQANT31 * 3;
pour z=1,2:
IPQ4z = ZIPQ4z * 4;
IPQANT41 = ZIPQANT41 * 4;
pour z=1,2;i=V,C,1..4:
IPQFiz = ZIPQFiz * COTFi;
pour i=V,C,1..4:
IPQFANTi1 = ZIPQFANTi1 * COTFi;
pour z=1,2;i=V,C:
IPQPALIMiz = ZIPQPALIMiz * PENSALNBi;
pour z=1,2;i=1..4:
IPQPALIMiz = ZIPQPALIMiz * PENSALNBPi;
pour i=V,C:
IPQPALIMANTi1 = ZIPQPALIMANTi1 * PENSALNBi;
pour i=1..4:
IPQPALIMANTi1 = ZIPQPALIMANTi1 * PENSALNBPi;
pour z=1,2:
IPQRCMDCz = ZIPQRCMDCz * REVACTNB;
IPQRCMDCANT1 = ZIPQRCMDCANT1 * REVACTNB;
pour z=1,2:
IPQRCMCHz = ZIPQRCMCHz * PROVIENB;
IPQRCMCHANT1 = ZIPQRCMCHANT1 * PROVIENB;
pour z=1,2:
IPQRCMFUz = ZIPQRCMFUz * REVPEANB;
IPQRCMFUANT1 = ZIPQRCMFUANT1 * REVPEANB;
pour z=1,2:
IPQRCMGOz = ZIPQRCMGOz * RESTUCNB;
IPQRCMGOANT1 = ZIPQRCMGOANT1 * RESTUCNB;
pour z=1,2:
IPQRCMTRz = ZIPQRCMTRz * INTERENB;
IPQRCMTRANT1 = ZIPQRCMTRANT1 * INTERENB;
pour z=1,2:
IPQRCMTSz = ZIPQRCMTSz * DISQUONB;
IPQRCMTSANT1 = ZIPQRCMTSANT1 * DISQUONB;
pour z=1,2;i=V,C:
IPQPRRiz = ZIPQPRRiz * CARPENBAi;
pour z=1,2;i=1..4:
IPQPRRiz = ZIPQPRRiz * CARPENBAPi;
pour z=1,2:
IPQPRRZVz = ZIPQPRRZVz * CODNAZ;
pour z=1,2:
IPQPRRZCz = ZIPQPRRZCz * CODNBZ;
pour z=1,2:
IPQPRRZ1z = ZIPQPRRZ1z * CODNCZ;
pour z=1,2:
IPQPRRZ2z = ZIPQPRRZ2z * CODNDZ;
pour z=1,2:
IPQPRRZ3z = ZIPQPRRZ3z * CODNEZ;
pour z=1,2:
IPQPRRZ4z = ZIPQPRRZ4z * CODNFZ;
pour i=V,C:
IPQPRRANTi1 = ZIPQPRRANTi1 * CARPENBAi;
pour i=1..4:
IPQPRRANTi1 = ZIPQPRRANTi1 * CARPENBAPi;
IPQPRRANTZV1 = ZIPQPRRANTZV1 * CODNAZ;
IPQPRRANTZC1 = ZIPQPRRANTZC1 * CODNBZ;
IPQPRRANTZ11 = ZIPQPRRANTZ11 * CODNCZ;
IPQPRRANTZ21 = ZIPQPRRANTZ21 * CODNDZ;
IPQPRRANTZ31 = ZIPQPRRANTZ31 * CODNEZ;
IPQPRRANTZ41 = ZIPQPRRANTZ41 * CODNFZ;
pour z=1,2:
IPQRF1z = ZIPQRF1z * FONCINB;
IPQRFANT11 = ZIPQRFANT11 * FONCINB;
pour z=1,2:
IPQRF2z = ZIPQRF2z * REAMORNB;
IPQRFANT21 = ZIPQRFANT21 * REAMORNB;
pour z=1,2:
IPQRVOz = ZIPQRVOz * RENTAXNB;
IPQRVOANT1 = ZIPQRVOANT1 * RENTAXNB;
pour z=1,2:
IPQRVO5z = ZIPQRVO5z * RENTAXNB5;
IPQRVO5ANT1 = ZIPQRVO5ANT1 * RENTAXNB5;
pour z=1,2:
IPQRVO6z = ZIPQRVO6z * RENTAXNB6;
IPQRVO6ANT1 = ZIPQRVO6ANT1 * RENTAXNB6;
pour z=1,2:
IPQRVO7z = ZIPQRVO7z * RENTAXNB7;
IPQRVO7ANT1 = ZIPQRVO7ANT1 * RENTAXNB7;
pour z=1,2;i=V,C:
IPQTSiz = ZIPQTSiz * CARTSNBAi;
pour z=1,2;i=1..4:
IPQTSiz = ZIPQTSiz * CARTSNBAPi;
pour i=V,C:
IPQTSANTi1 = ZIPQTSANTi1 * CARTSNBAi;
pour i=1..4:
IPQTSANTi1 = ZIPQTSANTi1 * CARTSNBAPi;
pour z=1,2;i=V,C:
IPQTSREMPiz = ZIPQTSREMPiz * REMPLANBi;
pour z=1,2;i=1..4:
IPQTSREMPiz = ZIPQTSREMPiz * REMPLANBPi;
pour i=V,C:
IPQTSREMPANTi1 = ZIPQTSREMPANTi1 * REMPLANBi;
pour i=1..4:
IPQTSREMPANTi1 = ZIPQTSREMPANTi1 * REMPLANBPi;
pour z=1,2:
IPQ100z = IPQRWBz+IPQRWAz+IPQRVGz + somme(x=1..4 : IPQxz) 
	+ somme(i=V,C,1..4:IPQFiz) 
	+ somme(i=V,C,1..4 : IPQPALIMiz) + somme(i=V,C,1..4 : IPQTSiz)
	+ somme(i=V,C,1..4 : IPQTSREMPiz)
	+ IPQRF11 + IPQRF21
	+ somme(i=V,C,1..4:IPQPRRiz+IPQPRRZiz)
	+ IPQRCMDCz + IPQRCMFUz + IPQRCMCHz + IPQRCMTSz + IPQRCMGOz + IPQRCMTRz
	+ IPQRVOz + IPQRVO5z + IPQRVO6z + IPQRVO7z ;
IPQANT1001 = IPQANTRWB+IPQANTRWA+IPQANTRVG + somme(x=1..4:IPQANTx1)
	+ somme(i=V,C,1..4:IPQFANTi1) 
	+ somme(i=V,C,1..4 : IPQPALIMANTi1) + somme(i=V,C,1..4 : IPQTSANTi1)
	+ somme(i=V,C,1..4 : IPQTSREMPi1)
	+ IPQRFANT11 + IPQRFANT21
	+ somme(i=V,C,1..4:IPQPRRANTi1+IPQPRRANTZi1)
	+ IPQRCMDCANT1 + IPQRCMFUANT1 + IPQRCMCHANT1 + IPQRCMTSANT1 + IPQRCMGOANT1 + IPQRCMTRANT1
	+ IPQRVOANT1 + IPQRVO5ANT1 + IPQRVO6ANT1 + IPQRVO7ANT1 ;

regle 511310:
application : bareme , iliad , batch ;


IPQ05 = IN05 + IBATMARG ;

IPQRWB5 = ZIPQRWB5 * CODNWB ;
IPQRWA5 = ZIPQRWA5 * CODNWA ;
IPQRVG5 = ZIPQRVG5 * CODNVG ;
IPQ15 = ZIPQ15 * 1 ;
IPQ25 = ZIPQ25 * 2 ;
IPQ35 = ZIPQ35 * 3 ;
IPQ45 = ZIPQ45 * 4 ;

pour i=V,C,1..4:
IPQFi5 = ZIPQFi5 * COTFi;

pour i=V,C:
IPQPALIMi5 = ZIPQPALIMi5 * PENSALNBi;

pour i=1..4:
IPQPALIMi5 = ZIPQPALIMi5 * PENSALNBPi;
IPQRCMDC5 = ZIPQRCMDC5 * REVACTNB;
IPQRCMCH5 = ZIPQRCMCH5 * PROVIENB;
IPQRCMFU5 = ZIPQRCMFU5 * REVPEANB;
IPQRCMGO5 = ZIPQRCMGO5 * RESTUCNB;
IPQRCMTR5 = ZIPQRCMTR5 * INTERENB;
IPQRCMTS5 = ZIPQRCMTS5 * DISQUONB;
pour i=V,C:
IPQPRRi5 = ZIPQPRRi5 * CARPENBAi;
pour i=1..4:
IPQPRRi5 = ZIPQPRRZi5 * CARPENBAPi;
IPQPRRZV5 = ZIPQPRRZV5 * CODNAZ;
IPQPRRZC5 = ZIPQPRRZC5 * CODNBZ;
IPQPRRZ15 = ZIPQPRRZ15 * CODNCZ;
IPQPRRZ25 = ZIPQPRRZ25 * CODNDZ;
IPQPRRZ35 = ZIPQPRRZ35 * CODNEZ;
IPQPRRZ45 = ZIPQPRRZ45 * CODNFZ;
IPQRF15 = ZIPQRF15 * FONCINB;
IPQRF25 = ZIPQRF25 * REAMORNB;
IPQRVO5 = ZIPQRVO5 * RENTAXNB;
IPQRVO55 = ZIPQRVO55 * RENTAXNB5;
IPQRVO65 = ZIPQRVO65 * RENTAXNB6;
IPQRVO75 = ZIPQRVO75 * RENTAXNB7;
pour i=V,C:
IPQTSi5 = ZIPQTSi5 * CARTSNBAi;
pour i=1..4:
IPQTSi5 = ZIPQTSi5 * CARTSNBAPi;
pour i=V,C:
IPQTSREMPi5 = ZIPQTSREMPi5 * REMPLANBi;
pour i=1..4:
IPQTSREMPi5 = ZIPQTSREMPi5 * REMPLANBPi;

IPQ1005 = IPQRWB5 +IPQRWA5 +IPQRVG5 + somme(x=1..4 : IPQx5) 
	+ somme(i=V,C,1..4:IPQFi5) 
	+ somme(i=V,C,1..4 : IPQPALIMi5) + somme(i=V,C,1..4 : IPQTSi5)
	+ somme(i=V,C,1..4 : IPQTSREMPi5)
	+ IPQRF15 + IPQRF25
	+ somme(i=V,C,1..4:IPQPRRi5+IPQPRRZi5)
	+ IPQRCMDC5 + IPQRCMFU5 + IPQRCMCH5 + IPQRCMTS5 + IPQRCMGO5 + IPQRCMTR5
	+ IPQRVO5 + IPQRVO55 + IPQRVO65 + IPQRVO75 ;

regle 511320:
application : bareme , iliad , batch ;

pour x=0;z=1,2:
INxz=max(ISx1z,ISx2z-PLA);
pour x=0;z=1,2:
INANTxz=max(ISx1z,ISx2z-PLANT);
pour x=5;z=1,2:
INxz=max(ISx1z,ISx2z-PLA);
pour x=5;z=1,2:
INANTxz=max(ISx1z,ISx2z-PLANT);
IN04 = max(IS014,IS024 - PLA);
IN06 = max(IS016,IS026 - PLA);
pour x=0,5:
INx5=max(ISx15,ISx25 - PLA);

regle 511330:
application : bareme, iliad , batch ;


pour z=1,2:
IDOM1z =  (max((ID1z + IBATMARG - ADOz)* (1-positif(INDCODDAJ)) + (ITOTDOMz + IBATMARG) * positif(INDCODDAJ), IMI)*(1-INDTXMOY)
         + IMO * INDTXMOY ) * (1 - positif(RE168+TAX1649));
IDOM14 = max((ID14 + IBATMARG - ADO4)* (1-positif(INDCODDAJ)) + (ITOTDOM4 + IBATMARG) * positif(INDCODDAJ), IMI) *(1-INDTXMOY)
         + IMO * INDTXMOY ;
IDOM16 = max((ID16 + IBATMARG - ADO6)* (1-positif(INDCODDAJ)) + (ITOTDOM6 + IBATMARG) * positif(INDCODDAJ), IMI) *(1-INDTXMOY)
         + IMO * INDTXMOY ;

regle 511340:
application : bareme, iliad , batch ;


BOOL_0AZ =  null((V_0AZ -  inf(V_0AZ/ 10000) * 10000) - V_ANREV ) ;

regle 511350:
application : bareme , iliad , batch ;


PLAFCDPART = positif(V_0AL) *  PLAF_CDPART ;


PLANT =  PLAQAR + PLAF_DEMIPART * 2 * ((NBPT - NBQAR) - 1 - BOOL_0AM - BOOL_0AZ  * V_0AV)
        - (2 * PLAF_DEMIPART - PLAF_COMPPART) * 2 * NPS 
					      * (V_0AC+V_0AD+V_0AV*(1-positif(V_0BT))) * min(1,EAC)
        - (PLAF_DEMIPART - PLAFCDPART) * (1 - BOOL_0AM) 
              * 2 * NSA * (1-positif(V_0AW)*positif_ou_nul(AGV-LIM_AGE_LET_S))
              * (1-V_0AG)
	       ;


PLACOMP = PLAFIMP * positif(V_0AV * (V_0CF + V_0DJ + V_0CH + V_0CR + V_9XX)
				  * (1-positif(V_0AZ)))
	  + 2 * PLAF_PLACOMP * max(0 , NIN + NSA2 + NCC) 
                + arr(PLAF_PLACOMP / 2 *  V_0CI) ;

regle 511360:
application : bareme , iliad , batch ;

VAR0AV = positif(V_0BT * V_0AV);
VAR0BT = (1-positif(null(V_0BT+0) + positif(V_0BT * V_0AV)));
NBMIQAR  =   null (VAR0BT) * ( 
                                 null (V_0CF+V_0DJ+V_0CR +0)    * (  2 * (V_0CH-2) * positif (V_0CH- 2)
                                                                         + (1) * positif (V_0CH+0)
                                                                         + (1) * positif(V_0CH-1)
                                                                  )
                                +  null(V_0CF+V_0DJ+V_0CR -1)   * (  2 * (V_0CH -1 ) * positif(V_0CH -1)
                                                                        +  1 * positif (V_0CH+0)
                                                                  )
                                +  positif_ou_nul(V_0CF+V_0DJ+V_0CR -2) * 2 * V_0CH 
                                             );



NB0BTMIQAR  =  null(1 -VAR0BT ) * ( null (V_0CF+V_0DJ+V_0CR +0) * 2 * (V_0CH-2) * positif (V_0CH- 2)
                                   ); 

NB0BT2MIQAR =  null(1 -VAR0BT) * ( null (V_0CF+V_0DJ+V_0CR +0) * ( positif (V_0CH+0) + positif (V_0CH-1))
                                   );



NB0BTQAR   =   null(1 -VAR0BT)* ( null(V_0CF+V_0DJ+V_0CR -1)   * (  2 * (V_0CH -1 ) * positif(V_0CH -1)
                                                                        +  1 * positif (V_0CH+0)
                                                                        )
                                +  positif_ou_nul(V_0CF+V_0DJ+V_0CR -2) * 2 * V_0CH
                                 );

PLAQAR = arr(   PLAF_DEMIPART /2 * (NBMIQAR  + NB0BTMIQAR + NB0BTQAR  +  V_0CI )
              + PLAF_COMPPART /2 *  NB0BT2MIQAR 
            );        
  
regle 511370:
application : bareme , iliad , batch ;


PLA = PLANT + PLACOMP ;

PLAFQFT = PLANT ;

regle 511380:
application : bareme , iliad , batch ;


pour x=0;y=1,2;z=1,2:
ISxyz = arr(DSxyz * NBy);
pour x=5;y=1,2;z=1,2:
ISxyz = arr(DSxyz * NBy);
pour y=1,2:
IS0y4 = arr(DS0y4 * NBy);
pour x=0,5;y=1,2:
ISxy5 = arr(DSxy5 * NBy);
pour y=1,2:
IS0y6 = arr(DS0y6 * NBy);

regle 511390:
application : bareme , iliad , batch ;

pour z=1,2:
ABADONz = arr(min((ID1z+IBATMARG) * (TX_RABDOM / 100)* max(0,V_EAD) ,PLAF_RABDOM))
     + arr(min((ID1z+IBATMARG) * (TX_RABGUY / 100) * max(0,V_EAG),PLAF_RABGUY))
	    ;
ABADON4 = arr(min((ID14+IBATMARG) * (TX_RABDOM / 100) * max(0,V_EAD),PLAF_RABDOM))
     + arr(min((ID14+IBATMARG) * (TX_RABGUY / 100) * max(0,V_EAG),PLAF_RABGUY))
	    ;
ABADON6 = arr(min((ID16+IBATMARG) * (TX_RABDOM / 100) * max(0,V_EAD),PLAF_RABDOM))
     + arr(min((ID16+IBATMARG) * (TX_RABGUY / 100) * max(0,V_EAG),PLAF_RABGUY))
	    ;
pour z=1,2:
ABADON3z = arr(min((IPQz+IBATMARG) * (TX_RABDOM / 100) * max(0,V_EAD),PLAF_RABDOM))
      + arr(min((IPQz+IBATMARG) * (TX_RABGUY / 100) * max(0,V_EAG),PLAF_RABGUY))
	    ;
pour z=1,2:
IMETROz = arr((IPQ0z+IBATMARG) * EXO1 * REVMETRO / RG);
pour z=1,2:
IPRODOMz = arr((IPQ0z+IBATMARG) * EXO1 * PRODOM / RG);
pour z=1,2:
IPROGUYz = arr((IPQ0z+IBATMARG) * EXO1 * PROGUY / RG);
pour z=1,2:
IQUORAJz = arr(IPQ100z * (TERPQ4RAJV + TERPQ4RBJC)/(TERPQ4TVC+TERPQTSV+TERPQTSC));
pour z=1,2:
IQUODAJz = arr(IPQ100z * (TERPQ4V + TERPQ4C)/(TERPQ4TVC+TERPQTSV+TERPQTSC));
pour z=1,2:
IQUOEAJz = max(0,IPQ100z - IQUODAJz-IQUORAJz);
pour z=1,2:
ABADOz = arr(min((IPRODOMz + IQUODAJz) * TX_RABDOM / 100,PLAF_RABDOM)) * positif(present(CODDAJ) + present(CODEAJ) + present(CODDBJ) + present(CODEBJ)+present(PRODOM));
pour z=1,2:
ABAGUz = arr(min((IPROGUYz + IQUOEAJz) * TX_RABGUY / 100,PLAF_RABGUY)) * positif(present(CODDAJ) + present(CODEAJ) + present(CODDBJ) + present(CODEBJ)+present(PROGUY));
pour z=1,2:
ABATOTz = ABADOz + ABAGUz;
pour z=1,2:
INETABADAJz = max(0,IPRODOMz + IQUODAJz - ABADOz);
pour z=1,2:
INETABAEAJz = max(0,IPROGUYz + IQUOEAJz - ABAGUz);
pour z=1,2:
ITOTDOMz = IMETROz + IQUORAJz + INETABADAJz + INETABAEAJz;
 

IMETRO4 = arr((ID14+IBATMARG) * EXO1 * REVMETRO / RG);
IPRODOM4 = arr((ID14+IBATMARG) * PRODOM / RG);
IPROGUY4 = arr((ID14+IBATMARG) * PROGUY / RG);
ABADO4 = arr(min((IPRODOM4 + ID14) * TX_RABDOM / 100,PLAF_RABDOM));
ABAGU4 = arr(min((IPROGUY4 + ID14) * TX_RABGUY / 100,PLAF_RABGUY));
ABATOT4 = ABADO4 + ABAGU4;
INETABADAJ4 = max(0,IPRODOM4 - ABADO4);
INETABAEAJ4 = max(0,IPROGUY4 - ABAGU4);
ISNETDAJ4 = arr(INETABADAJ4 * IPRODOM4 / IPRODOM4);
ISNETEAJ4 = max(0,INETABAEAJ4 - ISNETDAJ4);
ITOTDOM4 = IMETRO4 + ISNETDAJ4 + ISNETEAJ4;

IMETRO6 = arr((ID16+IBATMARG) * REVMETRO / RG);
IPRODOM6 = arr((ID16+IBATMARG) * PRODOM / RG);
IPROGUY6 = arr((ID16+IBATMARG) * PROGUY / RG);
ABADO6 = arr(min((IPRODOM6 + ID16) * TX_RABDOM / 100,PLAF_RABDOM));
ABAGU6 = arr(min((IPROGUY6 + ID16) * TX_RABGUY / 100,PLAF_RABGUY));
ABATOT6 = ABADO6 + ABAGU6;
INETABADAJ6 = max(0,IPRODOM6  - ABADO6);
INETABAEAJ6 = max(0,IPROGUY6  - ABAGU6);
ITOTDOM6 = IMETRO6 + INETABADAJ6+ INETABAEAJ6;
pour z=1,2:
IMETRO3z = arr((IPQ0z+IBATMARG) * REVMETRO / RG);
pour z=1,2:
IPRODOM3z = arr((IPQ0z+IBATMARG) * PRODOM / RG);
pour z=1,2:
IPROGUY3z = arr((IPQ0z+IBATMARG) * PROGUY / RG);
pour z=1,2:
IQUORAJ3z = arr(IPQ100z * (TERPQ4RAJV + TERPQ4RBJC)/(TERPQ4TVC+TERPQTSV+TERPQTSC));
pour z=1,2:
IQUODAJ3z = arr(IPQ100z * (TERPQ4V + TERPQ4C)/(TERPQ4TVC+TERPQTSV+TERPQTSC));
pour z=1,2:
IQUOEAJ3z = max(0,IPQ100z -IQUORAJ3z - IQUODAJ3z);
pour z=1,2:
ABADO3z = arr(min((IPRODOMz + IQUODAJ3z) * TX_RABDOM / 100,PLAF_RABDOM));
pour z=1,2:
ABAGU3z = arr(min((IPROGUYz + IQUOEAJ3z) * TX_RABGUY / 100,PLAF_RABGUY));
pour z=1,2:
ABATOT3z = ABADO3z + ABAGU3z;
pour z=1,2:
INETABADAJ3z = max(0,IPRODOMz + IQUODAJ3z - ABADO3z);
pour z=1,2:
INETABAEAJ3z = max(0,IPROGUYz + IQUOEAJ3z - ABAGU3z);
pour z=1,2:
ISNETDAJ3z = arr(INETABADAJ3z * IPRODOMz /( IPRODOMz + IQUODAJ3z));
pour z=1,2:
ISNETEAJ3z = max(0,INETABAEAJ3z - ISNETDAJ3z);
pour z=1,2:
IQNETDAJ3z = arr(INETABADAJ3z * IQUODAJ3z /( IPRODOMz + IQUODAJ3z));
pour z=1,2:
IQNETEAJ3z = max(0,INETABAEAJ3z - IQNETDAJ3z);
pour z=1,2:
ITOTDOM3z = IMETRO3z + IQUORAJ3z + INETABADAJ3z +  INETABAEAJ3z;


pour z=1,2:
ADOz = ABADONz * positif(V_EAD+V_EAG) * (1-positif(present(CODDAJ) + present(CODEAJ) + present(CODDBJ) + present(CODEBJ)+present(PROGUY)+present(PRODOM)))
               +  ABATOTz * (1-positif(V_EAD+V_EAG))*positif(present(CODDAJ) + present(CODEAJ) + present(CODDBJ) + present(CODEBJ)+present(PROGUY)+present(PRODOM));
ADO4 = ABADON4 * positif(V_EAD+V_EAG) * (1-positif(present(CODDAJ) + present(CODEAJ) + present(CODDBJ) + present(CODEBJ)+present(PROGUY)+present(PRODOM)))
               +  ABATOT4 * (1-positif(V_EAD+V_EAG))*positif(present(CODDAJ) + present(CODEAJ) + present(CODDBJ) + present(CODEBJ)+present(PROGUY)+present(PRODOM));
ADO6 = ABADON6 * positif(V_EAD+V_EAG) * (1-positif(present(CODDAJ) + present(CODEAJ) + present(CODDBJ) + present(CODEBJ)+present(PROGUY)+present(PRODOM)))
               +  ABATOT6 * (1-positif(V_EAD+V_EAG))*positif(present(CODDAJ) + present(CODEAJ) + present(CODDBJ) + present(CODEBJ)+present(PROGUY)+present(PRODOM));
pour z=1,2:
ADO3z = ABADON3z * positif(V_EAD+V_EAG) * (1-positif(present(CODDAJ) + present(CODEAJ) + present(CODDBJ) + present(CODEBJ)+present(PROGUY)+present(PRODOM)))
               +  ABATOT3z * (1-positif(V_EAD+V_EAG))*positif(present(CODDAJ) + present(CODEAJ) + present(CODDBJ) + present(CODEBJ)+present(PROGUY)+present(PRODOM));
ABADO = ABADON1 * V_EAD + ABADO1 ;
ABAGU = ABADON1 * V_EAG + ABAGU1 ;

